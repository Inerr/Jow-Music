#!/usr/bin/env node
import cliTool from "@hammerhq/cli-tool";
import { init } from "./commands/init";
import { install } from "./commands/install";
import { node } from "./commands/node";
import { tidy } from "./commands/tidy";

cliTool
	.createCommand(
		{
			name: "init",
			usage: "",
			example: ["--yes"],
			category: "Initialization",
			aliases: ["create", "generate", "new"],
			description: "Creates a new Hammer package.",
			options: [
				{
					name: "yes",
					alias: "y",
					defaultValue: false,
					type: Boolean,
				},
			],
		},
		init,
	)
	.createCommand(
		{
			name: "install",
			usage: "<package_name(s)>",
			example: [
				"TheHammerHQ/hammer-example-package",
				"TheHammerHQ/hammer-example-package TheHammerHQ/another",
			],
			category: "Package Management",
			aliases: ["i", "add"],
			description: "Installs a package.",
			options: [
				{
					name: "packages",
					type: String,
					multiple: true,
					defaultOption: true,
				},
			],
		},
		install,
	)
	.createCommand(
		{
			name: "tidy",
			usage: "",
			example: [""],
			category: "Package Management",
			aliases: ["t"],
			description: "Installs all packages.",
			options: [],
		},
		tidy,
	)
	.createCommand(
		{
			name: "node",
			usage: "<package_name(s)>",
			example: ["chalk", "chalk axios"],
			category: "Package Management",
			aliases: ["npm"],
			description: "Adds node packages to the project.",
			options: [
				{
					name: "packages",
					type: String,
					multiple: true,
					defaultOption: true,
				},
			],
		},
		node,
	)
	.help();
